rough codes for various numerical methods for a pre determined polynomial function in C programming language has been uploaded by me to my repository if in need of help you can take code from their and port it in java
link - https://github.com/ArihantKumarSeraogi/Numerical-Analysis-via-C
Rules to be strictly followed-

1> do not use error values such as 0.0001 in case of bisection or raphson or regula falsi etc use the EPSILON notation which is a static final double variable with value 0.000006.
2> code body for the method should be STRICTLY INDENTED AND COMMENTED ..meaning the comments shoud make the code somewhat self explanatory in nature.
3> the METHODS WILL CATCH OBJECTS of polynomial class and return a answer value of double type Note: the polynomial class has already been defined and uploaded 
4> the ERROR TERM for the method should be tracked and calculated
5> Please remember that the methods MUST BE STATIC so they can be called directly by importing the package.
6> Please do not forget to close the handles to your scanner object at the very end of your program where you're sure you will not be accessing stdin/System.in anymore.
7> user input vaidation is a must

<b>DATE OF SUBMISSION IS APRIL 10th, 2017.</b>


(methods for which raw code has been uploaded and upon which work should begin immediately)
bisection method- Subhobroto (task assigned on 4th april)
regula falsi method- Aranya &prachet (task assigned on 5th april)
newton raphson- 
// secant method- Amit das (task assigned on 5th april)
Gauss Jacobi- Swarnendu and Biswajit Nandy(task assigned on 5th april)
Gauss Seidel- Akash Gupta amd Gagandeep Singh (task assigned on 5th april)
Trapezoidal- Ankur (task assigned on 5th april)
Simpson 1/3rd- Chanchal (task assigned on 4th april) 
Euler- Souvik pal "Jerry" (task assigned on 5th april)
Forward Interpolation- Rohit Singh <initial code completed,integration and testing pending> 
Backward Interpolation- Vishal
